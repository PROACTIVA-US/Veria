name: Investor Portal CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/investor/**'
      - 'packages/types-investor/**'
      - 'api-gateway/src/routes/investor.ts'
      - '.github/workflows/investor-app.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/investor/**'
      - 'packages/types-investor/**'
      - 'api-gateway/src/routes/investor.ts'

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10'
  PROJECT_ID: veria-dev
  REGION: us-central1
  SERVICE_NAME: veria-investor
  REGISTRY: us-central1-docker.pkg.dev

jobs:
  test:
    name: Test Investor Portal
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build types package
        run: pnpm --filter @veria/types-investor build

      - name: Type check investor app
        run: pnpm --filter @veria/investor type-check

      - name: Lint investor app
        run: pnpm --filter @veria/investor lint
        continue-on-error: true

      - name: Build investor app
        run: pnpm --filter @veria/investor build
        env:
          FEATURE_INVESTOR_PORTAL: 'false'

  preview:
    name: Preview with Feature Flag
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build with feature flag enabled
        run: |
          pnpm --filter @veria/types-investor build
          pnpm --filter @veria/investor build
        env:
          FEATURE_INVESTOR_PORTAL: 'true'

      - name: Run smoke tests
        run: |
          # Start the app in background
          cd apps/investor
          npm start &
          APP_PID=$!

          # Wait for app to be ready
          sleep 10

          # Check health endpoint
          curl -f http://localhost:3002/ || exit 1

          # Kill the app
          kill $APP_PID
        env:
          FEATURE_INVESTOR_PORTAL: 'true'

      - name: Comment PR with preview info
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Investor Portal preview build successful! Feature flag can be enabled in staging for testing.'
            })

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.GCP_WIF_PROVIDER || secrets.GCP_DEV_WIP || 'projects/190356591245/locations/global/workloadIdentityPools/github-pool/providers/github-provider' }}"
          service_account: "${{ secrets.GCP_WIF_SERVICE_ACCOUNT || 'veria-deployer@veria-dev.iam.gserviceaccount.com' }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build \
            -f apps/investor/Dockerfile \
            -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/veria/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/veria/${{ env.SERVICE_NAME }}:latest \
            --build-arg FEATURE_INVESTOR_PORTAL=false \
            .

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/veria/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/veria/${{ env.SERVICE_NAME }}:latest

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    environment: staging
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.GCP_WIF_PROVIDER || secrets.GCP_DEV_WIP || 'projects/190356591245/locations/global/workloadIdentityPools/github-pool/providers/github-provider' }}"
          service_account: "${{ secrets.GCP_WIF_SERVICE_ACCOUNT || 'veria-deployer@veria-dev.iam.gserviceaccount.com' }}"

      - name: Deploy to Cloud Run (Staging)
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }}-staging \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/veria/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars FEATURE_INVESTOR_PORTAL=true \
            --set-env-vars NODE_ENV=staging \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10

      - name: Get service URL
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }}-staging --region ${{ env.REGION }} --format 'value(status.url)')
          echo "Staging URL: $URL"
          echo "staging_url=$URL" >> $GITHUB_OUTPUT
        id: deploy