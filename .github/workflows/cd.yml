name: CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  GCP_REGION: us-central1
  GAR_REPO: veria
  SERVICE_NAME: veria-app
  IMAGE_BASE: us-central1-docker.pkg.dev/veria-dev/veria/veria-app

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Verify authentication
        run: |
          echo "Authenticated as:"
          gcloud auth list --filter=status:ACTIVE --format="value(account)"
          echo ""
          echo "Current project:"
          gcloud config get-value project
          echo ""
          echo "Cloud Run services in ${{ env.GCP_REGION }}:"
          gcloud run services list --region=${{ env.GCP_REGION }} --format='value(METADATA.name)' || true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image metadata
        id: meta
        run: |
          SHA_TAG="${{ env.IMAGE_BASE }}:${GITHUB_SHA}"
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT

          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION_TAG="${{ env.IMAGE_BASE }}:${GITHUB_REF#refs/tags/}"
            LATEST_TAG="${{ env.IMAGE_BASE }}:latest"
            echo "version_tag=${VERSION_TAG}" >> $GITHUB_OUTPUT
            echo "latest_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
            echo "tags=${SHA_TAG},${VERSION_TAG},${LATEST_TAG}" >> $GITHUB_OUTPUT
          else
            echo "tags=${SHA_TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Get image digest
        id: digest
        run: |
          DIGEST=$(gcloud artifacts docker images describe "${{ steps.meta.outputs.sha_tag }}" \
            --format='get(image_summary.digest)')
          echo "digest=${DIGEST}" >> $GITHUB_OUTPUT
          echo "Image digest: ${DIGEST}"

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          # Deploy using the image digest for immutability
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image="${{ env.IMAGE_BASE }}@${{ steps.digest.outputs.digest }}" \
            --region=${{ env.GCP_REGION }} \
            --platform=managed \
            --port=8080 \
            --min-instances=1 \
            --max-instances=100 \
            --cpu=1 \
            --memory=512Mi \
            --timeout=60 \
            --concurrency=80 \
            --service-account=${{ secrets.GCP_SA_EMAIL }} \
            --no-allow-unauthenticated \
            --set-env-vars="NODE_ENV=production" \
            --update-labels="commit-sha=${GITHUB_SHA},deployed-by=github-actions" \
            --format="value(status.url)"

      - name: Verify deployment
        run: |
          echo "Deployment completed successfully!"
          echo ""
          echo "Service details:"
          gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region=${{ env.GCP_REGION }} \
            --format="yaml(status.url,status.latestReadyRevisionName,status.traffic)"

      - name: Output deployment summary
        run: |
          echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.SERVICE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.GCP_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ env.IMAGE_BASE }}@${{ steps.digest.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${GITHUB_SHA}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "- **Version**: ${GITHUB_REF#refs/tags/}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Deployment successful!" >> $GITHUB_STEP_SUMMARY